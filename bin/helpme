#!/usr/bin/env node

const util = require('util'),
    Burgeon = new require('../lib/burgeon'),
    rl = require('readline-sync');

const burgeon = new Burgeon();
const items = ['ssh-key', 'crud', 'md2js', 'kml'];
console.log('／**************** 欢迎使用itomix自动安装工具🔧****************／');

while (true) {
    try{
        let select = rl.keyInSelect(items, 'which tool do you need？');

        switch (select) {
            case 0:
                while (true) {
                    let items = ['create ssh', 'show using id_rsa.pub', 'show backup id_rsa.pub', 'backup using ssh-key', 'recover ssh-key to using'];
                    let select = rl.keyInSelect(items, '1. ->which tool do you need？');
                    switch (select) {
                        case 0:
                            let email = rl.questionEMail('please input your email：')
                            burgeon.createSsh(email);
                            break;
                        case 1:
                            burgeon.catPublicSsh();
                            break;
                        case 2:
                            burgeon.catBkPublicSsh();
                            break;
                        case 3:
                            burgeon.bkSsh();
                            break;
                        case 4:
                            burgeon.recoverSsh();
                            break;
                        case -1:
                        default:
                            break;
                    }
                    if (select === -1) {
                        break;
                    }
                }//while
                break;

            case 1:
                while (true) {
                    let items = ['introduction crud', 'install crud', 'Check whether the crud is installed ?'];
                    let select = rl.keyInSelect(items, '2. ->which tool do you need？？');
                    switch (select) {
                        case 0:
                            burgeon.crudDescription();
                            break;
                        case 1:
                            burgeon.install('crud-tools', 'git@gitlab.kmlab.com:tools/crud-tools.git');;
                            break;
                        case 2:
                            burgeon.testInstall('crud');
                            break;
                        case -1:
                        default:
                            break;
                    }
                    if (select === -1) {
                        break;
                    }
                }//while
                break;

            case 2:
                while (true) {
                    let items = ['introduction md2js', 'install md2js', 'Check whether the md2js is installed ?'];
                    let select = rl.keyInSelect(items, '3. ->which tool do you need？？');
                    switch (select) {
                        case 0:
                            burgeon.md2jsDescription();
                            break;
                        case 1:
                            burgeon.install('md2js', 'https://github.com/yujintang/md2js.git');
                            break;
                        case 2:
                            burgeon.testInstall('md2js');
                            break;
                        case -1:
                        default:
                            break;
                    }
                    if (select === -1) {
                        break;
                    }
                }//while
                break;

            case 3:
                while (true) {
                    let items = ['introduction kml', 'install kml', 'Check whether the kml is installed ?'];
                    let select = rl.keyInSelect(items, '4. ->which tool do you need？？');
                    switch (select) {
                        case 0:
                            burgeon.kmlDescription();
                            break;
                        case 1:
                            burgeon.install('kml', 'git@gitlab.kmlab.com:npms/kml.git')
                            break;
                        case 2:
                            burgeon.testInstall('kml');
                            break;
                        case -1:
                        default:
                            break;
                    }
                    if (select === -1) {
                        break;
                    }
                }//while
                break;

            case -1:
            default:
                console.log('再见！\n');
                break;
        }
        if (select === -1) {
            break;
        }
    }catch (e){
        console.log(`程序错误❌！` + e);
        break;
    }
}//while